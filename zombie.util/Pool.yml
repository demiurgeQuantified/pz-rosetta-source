version: '1.1'
languages:
  java:
    packages:
      zombie.util:
        Pool:
          modifiers:
          - public
          - final
          constructors:
          - modifiers:
            - public
            parameters:
            - name: allocator
              type:
                basic: Supplier
                full: Supplier<PO>
          methods:
          - name: alloc
            modifiers:
            - public
            - final
            return:
              type:
                basic: PO
          - name: release
            modifiers:
            - public
            - final
            parameters:
            - name: item
              type:
                basic: IPooledObject
            return:
              type:
                basic: void
          staticMethods:
          - name: tryRelease
            modifiers:
            - public
            - static
            parameters:
            - name: obj
              type:
                basic: E
            return:
              type:
                basic: E
          - name: tryRelease
            modifiers:
            - public
            - static
            parameters:
            - name: pooledObject
              type:
                basic: E
            return:
              type:
                basic: E
          - name: tryRelease
            modifiers:
            - public
            - static
            parameters:
            - name: objArray
              type:
                basic: E[]
            return:
              type:
                basic: E[]
          javaType: class
          extends: Object
          notes: 'A thread-safe object pool. Useful for re-using memory without it
            falling into the garbage collector.   Beware: Once an item has been allocated,
            it MUST be released at some point by calling its release() function.          If
            not, the item''s memory will never be recycled, and it will be considered
            a memory leak.'
