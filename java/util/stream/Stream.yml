version: '1.1'
languages:
  java:
    packages:
      java.util.stream:
        Stream:
          methods:
          - name: allMatch
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            return:
              type:
                basic: boolean
                full: boolean
          - name: anyMatch
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            return:
              type:
                basic: boolean
                full: boolean
          - name: close
            modifiers:
            - public
            return:
              type:
                basic: void
                full: void
          - name: collect
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Collector<? super T, A, R>
                full: java.util.stream.Collector<? super T, A, R>
            return:
              type:
                basic: R
                full: R
          - name: collect
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Supplier<R>
                full: java.util.function.Supplier<R>
            - name: arg1
              type:
                basic: BiConsumer<R, ? super T>
                full: java.util.function.BiConsumer<R, ? super T>
            - name: arg2
              type:
                basic: BiConsumer<R, R>
                full: java.util.function.BiConsumer<R, R>
            return:
              type:
                basic: R
                full: R
          - name: count
            modifiers:
            - public
            return:
              type:
                basic: long
                full: long
          - name: distinct
            modifiers:
            - public
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: dropWhile
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: filter
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: findAny
            modifiers:
            - public
            return:
              type:
                basic: Optional<T>
                full: java.util.Optional<T>
          - name: findFirst
            modifiers:
            - public
            return:
              type:
                basic: Optional<T>
                full: java.util.Optional<T>
          - name: flatMap
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Function<? super T, ? extends Stream<? extends R>>
                full: java.util.function.Function<? super T, ? extends java.util.stream.Stream<?
                  extends R>>
            return:
              type:
                basic: Stream<R>
                full: java.util.stream.Stream<R>
          - name: flatMapToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Function<? super T, ? extends DoubleStream>
                full: java.util.function.Function<? super T, ? extends java.util.stream.DoubleStream>
            return:
              type:
                basic: DoubleStream
                full: java.util.stream.DoubleStream
          - name: flatMapToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Function<? super T, ? extends IntStream>
                full: java.util.function.Function<? super T, ? extends java.util.stream.IntStream>
            return:
              type:
                basic: IntStream
                full: java.util.stream.IntStream
          - name: flatMapToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Function<? super T, ? extends LongStream>
                full: java.util.function.Function<? super T, ? extends java.util.stream.LongStream>
            return:
              type:
                basic: LongStream
                full: java.util.stream.LongStream
          - name: forEach
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Consumer<? super T>
                full: java.util.function.Consumer<? super T>
            return:
              type:
                basic: void
                full: void
          - name: forEachOrdered
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Consumer<? super T>
                full: java.util.function.Consumer<? super T>
            return:
              type:
                basic: void
                full: void
          - name: isParallel
            modifiers:
            - public
            return:
              type:
                basic: boolean
                full: boolean
          - name: iterator
            modifiers:
            - public
            return:
              type:
                basic: Iterator<T>
                full: java.util.Iterator<T>
          - name: limit
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: map
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Function<? super T, ? extends R>
                full: java.util.function.Function<? super T, ? extends R>
            return:
              type:
                basic: Stream<R>
                full: java.util.stream.Stream<R>
          - name: mapMulti
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiConsumer<? super T, Consumer<R>>
                full: java.util.function.BiConsumer<? super T, ? super java.util.function.Consumer<R>>
            return:
              type:
                basic: Stream<R>
                full: java.util.stream.Stream<R>
          - name: mapMultiToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiConsumer<? super T, DoubleConsumer>
                full: java.util.function.BiConsumer<? super T, ? super java.util.function.DoubleConsumer>
            return:
              type:
                basic: DoubleStream
                full: java.util.stream.DoubleStream
          - name: mapMultiToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiConsumer<? super T, IntConsumer>
                full: java.util.function.BiConsumer<? super T, ? super java.util.function.IntConsumer>
            return:
              type:
                basic: IntStream
                full: java.util.stream.IntStream
          - name: mapMultiToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiConsumer<? super T, LongConsumer>
                full: java.util.function.BiConsumer<? super T, ? super java.util.function.LongConsumer>
            return:
              type:
                basic: LongStream
                full: java.util.stream.LongStream
          - name: mapToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: ToDoubleFunction<? super T>
                full: java.util.function.ToDoubleFunction<? super T>
            return:
              type:
                basic: DoubleStream
                full: java.util.stream.DoubleStream
          - name: mapToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: ToIntFunction<? super T>
                full: java.util.function.ToIntFunction<? super T>
            return:
              type:
                basic: IntStream
                full: java.util.stream.IntStream
          - name: mapToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: ToLongFunction<? super T>
                full: java.util.function.ToLongFunction<? super T>
            return:
              type:
                basic: LongStream
                full: java.util.stream.LongStream
          - name: max
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Comparator<? super T>
                full: java.util.Comparator<? super T>
            return:
              type:
                basic: Optional<T>
                full: java.util.Optional<T>
          - name: min
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Comparator<? super T>
                full: java.util.Comparator<? super T>
            return:
              type:
                basic: Optional<T>
                full: java.util.Optional<T>
          - name: noneMatch
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            return:
              type:
                basic: boolean
                full: boolean
          - name: onClose
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Runnable
                full: java.lang.Runnable
            return:
              type:
                basic: S
                full: S
          - name: parallel
            modifiers:
            - public
            return:
              type:
                basic: S
                full: S
          - name: peek
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Consumer<? super T>
                full: java.util.function.Consumer<? super T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: reduce
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BinaryOperator<T>
                full: java.util.function.BinaryOperator<T>
            return:
              type:
                basic: Optional<T>
                full: java.util.Optional<T>
          - name: reduce
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: T
                full: T
            - name: arg1
              type:
                basic: BinaryOperator<T>
                full: java.util.function.BinaryOperator<T>
            return:
              type:
                basic: T
                full: T
          - name: reduce
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: U
                full: U
            - name: arg1
              type:
                basic: BiFunction<U, ? super T, U>
                full: java.util.function.BiFunction<U, ? super T, U>
            - name: arg2
              type:
                basic: BinaryOperator<U>
                full: java.util.function.BinaryOperator<U>
            return:
              type:
                basic: U
                full: U
          - name: sequential
            modifiers:
            - public
            return:
              type:
                basic: S
                full: S
          - name: skip
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: sorted
            modifiers:
            - public
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: sorted
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Comparator<? super T>
                full: java.util.Comparator<? super T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: spliterator
            modifiers:
            - public
            return:
              type:
                basic: Spliterator<T>
                full: java.util.Spliterator<T>
          - name: takeWhile
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: toArray
            modifiers:
            - public
            return:
              type:
                basic: Object[]
                full: java.lang.Object[]
          - name: toArray
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: IntFunction<A[]>
                full: java.util.function.IntFunction<A[]>
            return:
              type:
                basic: A[]
                full: A[]
          - name: toList
            modifiers:
            - public
            return:
              type:
                basic: List<T>
                full: java.util.List<T>
          - name: unordered
            modifiers:
            - public
            return:
              type:
                basic: S
                full: S
          staticMethods:
          - name: builder
            modifiers:
            - public
            - static
            return:
              type:
                basic: Builder<T>
                full: java.util.stream.Stream$Builder<T>
          - name: concat
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: Stream<? extends T>
                full: java.util.stream.Stream<? extends T>
            - name: arg1
              type:
                basic: Stream<? extends T>
                full: java.util.stream.Stream<? extends T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: empty
            modifiers:
            - public
            - static
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: generate
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: Supplier<? extends T>
                full: java.util.function.Supplier<? extends T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: iterate
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: T
                full: T
            - name: arg1
              type:
                basic: UnaryOperator<T>
                full: java.util.function.UnaryOperator<T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: iterate
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: T
                full: T
            - name: arg1
              type:
                basic: Predicate<? super T>
                full: java.util.function.Predicate<? super T>
            - name: arg2
              type:
                basic: UnaryOperator<T>
                full: java.util.function.UnaryOperator<T>
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: of
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: T[]
                full: T[]
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: of
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: T
                full: T
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          - name: ofNullable
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: T
                full: T
            return:
              type:
                basic: Stream<T>
                full: java.util.stream.Stream<T>
          javaType: interface
          extends: null
