version: '1.1'
languages:
  java:
    packages:
      java.util.concurrent:
        ConcurrentHashMap:
          constructors:
          - modifiers:
            - public
          - modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: int
                full: int
          - modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Map<? extends K, ? extends V>
                full: java.util.Map<? extends K, ? extends V>
          - modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: int
                full: int
            - name: arg1
              type:
                basic: float
                full: float
          - modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: int
                full: int
            - name: arg1
              type:
                basic: float
                full: float
            - name: arg2
              type:
                basic: int
                full: int
          methods:
          - name: __toString__
            modifiers:
            - public
            return:
              type:
                basic: String
                full: java.lang.String
          - name: clear
            modifiers:
            - public
            return:
              type:
                basic: void
                full: void
          - name: compute
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: compute
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: computeIfAbsent
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: Function<? super K, ? extends V>
                full: java.util.function.Function<? super K, ? extends V>
            return:
              type:
                basic: V
                full: V
          - name: computeIfAbsent
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: Function<? super K, ? extends V>
                full: java.util.function.Function<? super K, ? extends V>
            return:
              type:
                basic: V
                full: V
          - name: computeIfPresent
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: computeIfPresent
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: contains
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: boolean
                full: boolean
          - name: containsKey
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: boolean
                full: boolean
          - name: containsValue
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: boolean
                full: boolean
          - name: elements
            modifiers:
            - public
            return:
              type:
                basic: Enumeration<V>
                full: java.util.Enumeration<V>
          - name: entrySet
            modifiers:
            - public
            return:
              type:
                basic: Entry<K, V>>
                full: java.util.Set<java.util.Map$Entry<K, V>>
          - name: equals
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: boolean
                full: boolean
          - name: forEach
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiConsumer<? super K, ? super V>
                full: java.util.function.BiConsumer<? super K, ? super V>
            return:
              type:
                basic: void
                full: void
          - name: forEach
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiConsumer<? super K, ? super V>
                full: java.util.function.BiConsumer<? super K, ? super V>
            return:
              type:
                basic: void
                full: void
          - name: forEach
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: BiConsumer<? super K, ? super V>
                full: java.util.function.BiConsumer<? super K, ? super V>
            return:
              type:
                basic: void
                full: void
          - name: forEach
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends U>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  U>
            - name: arg2
              type:
                basic: Consumer<? super U>
                full: java.util.function.Consumer<? super U>
            return:
              type:
                basic: void
                full: void
          - name: forEachEntry
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>>
                full: java.util.function.Consumer<? super java.util.Map$Entry<K, V>>
            return:
              type:
                basic: void
                full: void
          - name: forEachEntry
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>, ? extends U>
                full: java.util.function.Function<java.util.Map$Entry<K, V>, ? extends
                  U>
            - name: arg2
              type:
                basic: Consumer<? super U>
                full: java.util.function.Consumer<? super U>
            return:
              type:
                basic: void
                full: void
          - name: forEachKey
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Consumer<? super K>
                full: java.util.function.Consumer<? super K>
            return:
              type:
                basic: void
                full: void
          - name: forEachKey
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Function<? super K, ? extends U>
                full: java.util.function.Function<? super K, ? extends U>
            - name: arg2
              type:
                basic: Consumer<? super U>
                full: java.util.function.Consumer<? super U>
            return:
              type:
                basic: void
                full: void
          - name: forEachValue
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Consumer<? super V>
                full: java.util.function.Consumer<? super V>
            return:
              type:
                basic: void
                full: void
          - name: forEachValue
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Function<? super V, ? extends U>
                full: java.util.function.Function<? super V, ? extends U>
            - name: arg2
              type:
                basic: Consumer<? super U>
                full: java.util.function.Consumer<? super U>
            return:
              type:
                basic: void
                full: void
          - name: get
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: V
                full: V
          - name: getOrDefault
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: getOrDefault
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: hashCode
            modifiers:
            - public
            return:
              type:
                basic: int
                full: int
          - name: isEmpty
            modifiers:
            - public
            return:
              type:
                basic: boolean
                full: boolean
          - name: keySet
            modifiers:
            - public
            return:
              type:
                basic: KeySetView<K, V>
                full: java.util.concurrent.ConcurrentHashMap$KeySetView<K, V>
          - name: keySet
            modifiers:
            - public
            return:
              type:
                basic: KeySetView<K, V>
                full: java.util.concurrent.ConcurrentHashMap$KeySetView<K, V>
          - name: keySet
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: V
                full: V
            return:
              type:
                basic: KeySetView<K, V>
                full: java.util.concurrent.ConcurrentHashMap$KeySetView<K, V>
          - name: keys
            modifiers:
            - public
            return:
              type:
                basic: Enumeration<K>
                full: java.util.Enumeration<K>
          - name: mappingCount
            modifiers:
            - public
            return:
              type:
                basic: long
                full: long
          - name: merge
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            - name: arg2
              type:
                basic: BiFunction<? super V, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super V, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: merge
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            - name: arg2
              type:
                basic: BiFunction<? super V, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super V, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: put
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: putAll
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Map<? extends K, ? extends V>
                full: java.util.Map<? extends K, ? extends V>
            return:
              type:
                basic: void
                full: void
          - name: putIfAbsent
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: putIfAbsent
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: reduce
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends U>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  U>
            - name: arg2
              type:
                basic: BiFunction<? super U, ? super U, ? extends U>
                full: java.util.function.BiFunction<? super U, ? super U, ? extends
                  U>
            return:
              type:
                basic: U
                full: U
          - name: reduceEntries
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>>
                full: java.util.function.BiFunction<java.util.Map$Entry<K, V>, java.util.Map$Entry<K,
                  V>, ? extends java.util.Map$Entry<K, V>>
            return:
              type:
                basic: Entry<K, V>
                full: java.util.Map$Entry<K, V>
          - name: reduceEntries
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>, ? extends U>
                full: java.util.function.Function<java.util.Map$Entry<K, V>, ? extends
                  U>
            - name: arg2
              type:
                basic: BiFunction<? super U, ? super U, ? extends U>
                full: java.util.function.BiFunction<? super U, ? super U, ? extends
                  U>
            return:
              type:
                basic: U
                full: U
          - name: reduceEntriesToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>>
                full: java.util.function.ToDoubleFunction<java.util.Map$Entry<K, V>>
            - name: arg2
              type:
                basic: double
                full: double
            - name: arg3
              type:
                basic: DoubleBinaryOperator
                full: java.util.function.DoubleBinaryOperator
            return:
              type:
                basic: double
                full: double
          - name: reduceEntriesToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>>
                full: java.util.function.ToIntFunction<java.util.Map$Entry<K, V>>
            - name: arg2
              type:
                basic: int
                full: int
            - name: arg3
              type:
                basic: IntBinaryOperator
                full: java.util.function.IntBinaryOperator
            return:
              type:
                basic: int
                full: int
          - name: reduceEntriesToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>>
                full: java.util.function.ToLongFunction<java.util.Map$Entry<K, V>>
            - name: arg2
              type:
                basic: long
                full: long
            - name: arg3
              type:
                basic: LongBinaryOperator
                full: java.util.function.LongBinaryOperator
            return:
              type:
                basic: long
                full: long
          - name: reduceKeys
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super K, ? extends K>
                full: java.util.function.BiFunction<? super K, ? super K, ? extends
                  K>
            return:
              type:
                basic: K
                full: K
          - name: reduceKeys
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Function<? super K, ? extends U>
                full: java.util.function.Function<? super K, ? extends U>
            - name: arg2
              type:
                basic: BiFunction<? super U, ? super U, ? extends U>
                full: java.util.function.BiFunction<? super U, ? super U, ? extends
                  U>
            return:
              type:
                basic: U
                full: U
          - name: reduceKeysToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToDoubleFunction<? super K>
                full: java.util.function.ToDoubleFunction<? super K>
            - name: arg2
              type:
                basic: double
                full: double
            - name: arg3
              type:
                basic: DoubleBinaryOperator
                full: java.util.function.DoubleBinaryOperator
            return:
              type:
                basic: double
                full: double
          - name: reduceKeysToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToIntFunction<? super K>
                full: java.util.function.ToIntFunction<? super K>
            - name: arg2
              type:
                basic: int
                full: int
            - name: arg3
              type:
                basic: IntBinaryOperator
                full: java.util.function.IntBinaryOperator
            return:
              type:
                basic: int
                full: int
          - name: reduceKeysToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToLongFunction<? super K>
                full: java.util.function.ToLongFunction<? super K>
            - name: arg2
              type:
                basic: long
                full: long
            - name: arg3
              type:
                basic: LongBinaryOperator
                full: java.util.function.LongBinaryOperator
            return:
              type:
                basic: long
                full: long
          - name: reduceToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToDoubleBiFunction<? super K, ? super V>
                full: java.util.function.ToDoubleBiFunction<? super K, ? super V>
            - name: arg2
              type:
                basic: double
                full: double
            - name: arg3
              type:
                basic: DoubleBinaryOperator
                full: java.util.function.DoubleBinaryOperator
            return:
              type:
                basic: double
                full: double
          - name: reduceToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToIntBiFunction<? super K, ? super V>
                full: java.util.function.ToIntBiFunction<? super K, ? super V>
            - name: arg2
              type:
                basic: int
                full: int
            - name: arg3
              type:
                basic: IntBinaryOperator
                full: java.util.function.IntBinaryOperator
            return:
              type:
                basic: int
                full: int
          - name: reduceToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToLongBiFunction<? super K, ? super V>
                full: java.util.function.ToLongBiFunction<? super K, ? super V>
            - name: arg2
              type:
                basic: long
                full: long
            - name: arg3
              type:
                basic: LongBinaryOperator
                full: java.util.function.LongBinaryOperator
            return:
              type:
                basic: long
                full: long
          - name: reduceValues
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: BiFunction<? super V, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super V, ? super V, ? extends
                  V>
            return:
              type:
                basic: V
                full: V
          - name: reduceValues
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Function<? super V, ? extends U>
                full: java.util.function.Function<? super V, ? extends U>
            - name: arg2
              type:
                basic: BiFunction<? super U, ? super U, ? extends U>
                full: java.util.function.BiFunction<? super U, ? super U, ? extends
                  U>
            return:
              type:
                basic: U
                full: U
          - name: reduceValuesToDouble
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToDoubleFunction<? super V>
                full: java.util.function.ToDoubleFunction<? super V>
            - name: arg2
              type:
                basic: double
                full: double
            - name: arg3
              type:
                basic: DoubleBinaryOperator
                full: java.util.function.DoubleBinaryOperator
            return:
              type:
                basic: double
                full: double
          - name: reduceValuesToInt
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToIntFunction<? super V>
                full: java.util.function.ToIntFunction<? super V>
            - name: arg2
              type:
                basic: int
                full: int
            - name: arg3
              type:
                basic: IntBinaryOperator
                full: java.util.function.IntBinaryOperator
            return:
              type:
                basic: int
                full: int
          - name: reduceValuesToLong
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: ToLongFunction<? super V>
                full: java.util.function.ToLongFunction<? super V>
            - name: arg2
              type:
                basic: long
                full: long
            - name: arg3
              type:
                basic: LongBinaryOperator
                full: java.util.function.LongBinaryOperator
            return:
              type:
                basic: long
                full: long
          - name: remove
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: V
                full: V
          - name: remove
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            - name: arg1
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: boolean
                full: boolean
          - name: remove
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: Object
                full: java.lang.Object
            - name: arg1
              type:
                basic: Object
                full: java.lang.Object
            return:
              type:
                basic: boolean
                full: boolean
          - name: replace
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: replace
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            return:
              type:
                basic: V
                full: V
          - name: replace
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            - name: arg2
              type:
                basic: V
                full: V
            return:
              type:
                basic: boolean
                full: boolean
          - name: replace
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: K
                full: K
            - name: arg1
              type:
                basic: V
                full: V
            - name: arg2
              type:
                basic: V
                full: V
            return:
              type:
                basic: boolean
                full: boolean
          - name: replaceAll
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiFunction<? super K, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  V>
            return:
              type:
                basic: void
                full: void
          - name: replaceAll
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: BiFunction<? super K, ? super V, ? extends V>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  V>
            return:
              type:
                basic: void
                full: void
          - name: search
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: BiFunction<? super K, ? super V, ? extends U>
                full: java.util.function.BiFunction<? super K, ? super V, ? extends
                  U>
            return:
              type:
                basic: U
                full: U
          - name: searchEntries
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Entry<K, V>, ? extends U>
                full: java.util.function.Function<java.util.Map$Entry<K, V>, ? extends
                  U>
            return:
              type:
                basic: U
                full: U
          - name: searchKeys
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Function<? super K, ? extends U>
                full: java.util.function.Function<? super K, ? extends U>
            return:
              type:
                basic: U
                full: U
          - name: searchValues
            modifiers:
            - public
            parameters:
            - name: arg0
              type:
                basic: long
                full: long
            - name: arg1
              type:
                basic: Function<? super V, ? extends U>
                full: java.util.function.Function<? super V, ? extends U>
            return:
              type:
                basic: U
                full: U
          - name: size
            modifiers:
            - public
            return:
              type:
                basic: int
                full: int
          - name: values
            modifiers:
            - public
            return:
              type:
                basic: Collection<V>
                full: java.util.Collection<V>
          staticMethods:
          - name: newKeySet
            modifiers:
            - public
            - static
            return:
              type:
                basic: KeySetView<K, Boolean>
                full: java.util.concurrent.ConcurrentHashMap$KeySetView<K, java.lang.Boolean>
          - name: newKeySet
            modifiers:
            - public
            - static
            parameters:
            - name: arg0
              type:
                basic: int
                full: int
            return:
              type:
                basic: KeySetView<K, Boolean>
                full: java.util.concurrent.ConcurrentHashMap$KeySetView<K, java.lang.Boolean>
          javaType: class
          extends: AbstractMap<K, V>
